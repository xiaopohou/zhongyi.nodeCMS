{
  "_args": [
    [
      {
        "raw": "signal-exit@^2.0.0",
        "scope": null,
        "escapedName": "signal-exit",
        "name": "signal-exit",
        "rawSpec": "^2.0.0",
        "spec": ">=2.0.0 <3.0.0",
        "type": "range"
      },
      "/Users/benjamincoe/oss/nyc/node_modules/spawn-wrap"
    ]
  ],
  "_from": "signal-exit@>=2.0.0 <3.0.0",
  "_id": "signal-exit@2.1.2",
  "_inCache": true,
  "_location": "/nyc/spawn-wrap/signal-exit",
  "_nodeVersion": "2.0.2",
  "_npmUser": {
    "name": "bcoe",
    "email": "ben@npmjs.com"
  },
  "_npmVersion": "2.9.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "signal-exit@^2.0.0",
    "scope": null,
    "escapedName": "signal-exit",
    "name": "signal-exit",
    "rawSpec": "^2.0.0",
    "spec": ">=2.0.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/nyc/spawn-wrap"
  ],
  "_resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-2.1.2.tgz",
  "_shasum": "375879b1f92ebc3b334480d038dc546a6d558564",
  "_shrinkwrap": null,
  "_spec": "signal-exit@^2.0.0",
  "_where": "/Users/benjamincoe/oss/nyc/node_modules/spawn-wrap",
  "author": {
    "name": "Ben Coe",
    "email": "ben@npmjs.com"
  },
  "bugs": {
    "url": "https://github.com/bcoe/signal-exit/issues"
  },
  "dependencies": {},
  "description": "when you want to fire an event no matter how a process exits.",
  "devDependencies": {
    "chai": "^2.3.0",
    "coveralls": "^2.11.2",
    "nyc": "^2.1.2",
    "standard": "^3.9.0",
    "tap": "1.0.4"
  },
  "directories": {},
  "dist": {
    "shasum": "375879b1f92ebc3b334480d038dc546a6d558564",
    "tarball": "https://registry.npmjs.org/signal-exit/-/signal-exit-2.1.2.tgz"
  },
  "gitHead": "8d50231bda6d0d1c4d39de20fc09d11487eb9951",
  "homepage": "https://github.com/bcoe/signal-exit",
  "keywords": [
    "signal",
    "exit"
  ],
  "license": "ISC",
  "main": "index.js",
  "maintainers": [
    {
      "name": "bcoe",
      "email": "ben@npmjs.com"
    },
    {
      "name": "isaacs",
      "email": "isaacs@npmjs.com"
    }
  ],
  "name": "signal-exit",
  "optionalDependencies": {},
  "readme": "# signal-exit\n\n[![Build Status](https://travis-ci.org/bcoe/signal-exit.png)](https://travis-ci.org/bcoe/signal-exit)\n[![Coverage Status](https://coveralls.io/repos/bcoe/signal-exit/badge.svg?branch=)](https://coveralls.io/r/bcoe/signal-exit?branch=)\n[![NPM version](https://img.shields.io/npm/v/signal-exit.svg)](https://www.npmjs.com/package/signal-exit)\n\nWhen you want to fire an event no matter how a process exits:\n\n* reaching the end of execution.\n* explicitly having `process.exit(code)` called.\n* having `process.kill(pid, sig)` called.\n* receiving a fatal signal from outside the process\n\nUse `signal-exit`.\n\n```js\nvar onExit = require('signal-exit')\n\nonExit(function (code, signal) {\n  console.log('process exited!')\n})\n```\n\n## API\n\n`var remove = onExit(function (code, signal) {}, options)`\n\nThe return value of the function is a function that will remove the\nhandler.\n\nNote that the function *only* fires for signals if the signal would\ncause the proces to exit.  That is, there are no other listeners, and\nit is a fatal signal.\n\n## Options\n\n* `alwaysLast`: Run this handler after any other signal or exit\n  handlers.  This causes `process.emit` to be monkeypatched.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/bcoe/signal-exit.git"
  },
  "scripts": {
    "coverage": "nyc report --reporter=text-lcov | coveralls",
    "test": "standard && nyc tap --timeout=240 ./test/*.js"
  },
  "version": "2.1.2"
}
